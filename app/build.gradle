plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id "io.gitlab.arturbosch.detekt" version "1.23.1"
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace 'jp.co.yumemi.android.codeCheck'
    compileSdk 34

    defaultConfig {
        applicationId "jp.co.yumemi.android.codecheck"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "jp.co.yumemi.android.codeCheck.CustomTestRunner"
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        dataBinding true
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.4'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'io.ktor:ktor-client-android:2.3.5'

    implementation 'io.coil-kt:coil:1.4.0'

    implementation "io.insert-koin:koin-androidx-compose:3.5.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
    implementation 'io.ktor:ktor-serialization-kotlinx-json:2.3.5'
    implementation 'io.ktor:ktor-client-content-negotiation:2.3.5'
    implementation 'io.ktor:ktor-client-logging:2.3.5'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation 'io.insert-koin:koin-test:3.5.0'
    testImplementation 'io.insert-koin:koin-android-test:3.5.0'
    testImplementation 'io.ktor:ktor-client-mock:2.3.5'
    testImplementation "io.mockk:mockk-android:1.13.8"
    testImplementation "io.mockk:mockk-agent:1.13.8"
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.25'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
}

// kotlin-gradle-plugin must be applied for configuration below to work
// (see https://kotlinlang.org/docs/reference/using-gradle.html)

configurations {
  ktlint
}

dependencies {
  ktlint("com.pinterest:ktlint:0.40.0") {
    attributes {
      attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
    }
  }
  // additional 3rd party ruleset(s) can be specified here
  // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
  // ktlint will pick them up
}

tasks.register("ktlintCheck", JavaExec) {
  group = "verification"
  description = "Check Kotlin code style."
  classpath = configurations.ktlint
  mainClass = "com.pinterest.ktlint.Main"
  // see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information
  args "--android", "--reporter=plain", "--color", "--reporter=checkstyle,output=${project.buildDir}/reports/ktlint/results.xml",
          "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.named("check") {
  dependsOn tasks.named("ktlintCheck")
}

tasks.register("ktlintFormat", JavaExec) {
  group = "formatting"
  description = "Fix Kotlin code style deviations."
  classpath = configurations.ktlint
  mainClass = "com.pinterest.ktlint.Main"
  jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
  // see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information
  args "--android", "--reporter=plain", "--color", "--reporter=checkstyle",
          "-F", "src/**/*.kt", "**.kts", "!**/build/**"
}

// dotkit
// https://detekt.dev/docs/gettingstarted/gradle
detekt {
    toolVersion = "1.23.1"
    config.setFrom("../config/detekt/detekt.yml")
}
